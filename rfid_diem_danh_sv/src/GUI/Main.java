/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BUS.DiemDanhBUS;
import BUS.SinhVienBUS;
import com.impinj.octane.ImpinjReader;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.plaf.basic.BasicMenuBarUI;

/**
 *
 * @author kieud
 */
public class Main extends javax.swing.JFrame {
    public static DiemDanhBUS ddBUS = new DiemDanhBUS();
    
    public static JFrame frame = new JFrame("RFID");
    public static JMenu menu = new JMenu("Menu");
    
    public static NhapGioGUI ng = new NhapGioGUI();
    public static DiemDanhGUI dd = new DiemDanhGUI();
    public static BaoCaoGUI bc = new BaoCaoGUI();
    public static CaiDatGUI cd = new CaiDatGUI();

    public static ImpinjReader reader = new ImpinjReader();

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
//    static{
//        customizeMenuBar();
//    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //read file cau_hinh.conf
                String MaPH = null;
                int tgCheckOut = 0;
                Properties prop = new Properties();
                try {
                    FileInputStream fis = new FileInputStream("./cau_hinh.conf");
                    prop.load(fis);
                    if(prop.getProperty("MaPH") != null)
                    {
                        MaPH = prop.getProperty("MaPH").toString();
                    }
                    if(prop.getProperty("TGCheckOut") != null)
                    {
                        tgCheckOut =  Integer.valueOf(prop.getProperty("TGCheckOut"));
                    }
                    fis.close();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                ImageIcon logo = new ImageIcon("./src/icons/logo.jpg");
                frame.setIconImage(logo.getImage());

                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.setSize(500, 400);
                frame.setResizable(false);
                frame.setLocationRelativeTo(null);

                //cai dat menu
                JMenuBar menuBar = new JMenuBar();

                menuBar.setUI(new BasicMenuBarUI() {
                    @Override
                    public void paint(Graphics g, JComponent c) {
                        g.setColor(Color.white);
                        g.fillRect(0, 0, c.getWidth(), c.getHeight());
                    }
                });

                menu.setFont(new Font("Verdana", Font.PLAIN, 13));
                menu.setBackground(Color.white);
                menu.setOpaque(true);
                menu.getPopupMenu().setBorder(null);

                JMenuItem bcMenuItem = new JMenuItem("Báo cáo");
                bcMenuItem.setFont(new Font("Verdana", Font.PLAIN, 13));
                bcMenuItem.setActionCommand("Báo cáo");
                bcMenuItem.setBackground(Color.white);
                bcMenuItem.setOpaque(true);
                JMenuItem impExMenuItem = new JMenuItem("Import DSSV");
                impExMenuItem.setFont(new Font("Verdana", Font.PLAIN, 13));
                impExMenuItem.setActionCommand("Import DSSV");
                impExMenuItem.setBackground(Color.white);
                impExMenuItem.setOpaque(true);
                JMenuItem cdMenuItem = new JMenuItem("Cài đặt");
                cdMenuItem.setFont(new Font("Verdana", Font.PLAIN, 13));
                cdMenuItem.setActionCommand("Import DSSV");
                cdMenuItem.setBackground(Color.white);
                cdMenuItem.setOpaque(true);
                JMenuItem thMenuItem = new JMenuItem("Thoát");
                thMenuItem.setFont(new Font("Verdana", Font.PLAIN, 13));
                thMenuItem.setActionCommand("Báo cáo");
                thMenuItem.setBackground(Color.white);
                thMenuItem.setOpaque(true);

                //add listener  cho menu item
                bcMenuItem.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        ddBUS.MaLH = ng.cbLH.getSelectedItem().toString();
                        ddBUS.tgVT = ng.tgVT;
                        ddBUS.tgVS = ng.tgVS;
                        bc.renewPanelBottom(bc.cols, bc.begin, bc.end);
                        menu.getItem(0).setEnabled(false);
                        frame.remove(Main.ng);
                        frame.add(Main.bc);
                        frame.pack();
                        frame.setLocationRelativeTo(null);
                    }
                });
                impExMenuItem.addActionListener(new ActionListener(){
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        JFrame frameImp = new JFrame("Import danh sách sinh viên");
                        JFileChooser fileChooser = new JFileChooser();
                        fileChooser.setDialogTitle("Import danh sách sinh viên");
                        int userSelection = fileChooser.showOpenDialog(frameImp);
                        if (userSelection == JFileChooser.APPROVE_OPTION) {
                            File fileToOpen = fileChooser.getSelectedFile();
                            SinhVienBUS svBUS = new SinhVienBUS();
                            if(svBUS.importExcel(fileToOpen.getAbsolutePath()))
                            {
                                ThongBaoGUI tb = new ThongBaoGUI("Import thành công.", ThongBaoGUI.MESSAGE);
                            } 
                            else
                            {
                                ThongBaoGUI tb = new ThongBaoGUI("Import thất bại.", ThongBaoGUI.WARNING);
                            }
                                
                        }
                    }
                });
                cdMenuItem.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
//                        cd.MaPH = MaPH;
//                        cd.tgCheckOut = tgCheckOut;
                        cd.setVisible(true);
                    }
                });
                thMenuItem.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        frame.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING));
                    }
                });

                menu.add(bcMenuItem);
                menu.add(impExMenuItem);
                menu.add(cdMenuItem);
                menu.add(thMenuItem);
                menuBar.add(menu);

                frame.setJMenuBar(menuBar);

                frame.add(ng);
                frame.setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
